function DuckHub()
    local DuckLibrary = { }
    
    function DuckLibrary:CreateMain(text, draggable, autoscale,pos)
		local Main = { }
		
		local GuiTitle = "DuckHub"
		
    	if game:GetService("CoreGui"):FindFirstChild(GuiTitle) ~= nil then
    		game:GetService("CoreGui"):FindFirstChild(GuiTitle):Destroy()
    	end
    	
    	local ScreenGui = Instance.new("ScreenGui")
    	local MainFrame = Instance.new("ImageLabel")
    	local UIListLayout = Instance.new("UIListLayout")
    	local Title = Instance.new("TextLabel")
    	
    	--Properties:
    	
    	ScreenGui.Parent = game:GetService("CoreGui")
    	ScreenGui.Name = GuiTitle
    	
    	MainFrame.Name = "MainFrame"
    	MainFrame.Parent = ScreenGui
    	MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    	MainFrame.BackgroundTransparency = 1.000
    	if pos ~= nil then
    		MainFrame.Position = pos
    	else
    		MainFrame.Position = UDim2.new(0.594207287, 0, 0.346457452, 0)
    	end
		if autoscale == true then
    		MainFrame.Size = UDim2.new(0, 215,0, 20)
		else
			MainFrame.Size = UDim2.new(0,215,0,351)
		end
    	MainFrame.ZIndex = 0
    	MainFrame.Image = "rbxassetid://3570695787"
    	MainFrame.ImageColor3 = Color3.fromRGB(30, 30, 30)
    	MainFrame.ScaleType = Enum.ScaleType.Slice
    	MainFrame.SliceCenter = Rect.new(100, 100, 100, 100)
    	MainFrame.SliceScale = 0.050
		MainFrame.Active = true
		if draggable then
			MainFrame.Draggable = true
		end
    	
    	UIListLayout.Parent = game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame
		UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.Padding = UDim.new(0.00999999978, 2)
    	
    	Title.Parent = MainFrame
    	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    	Title.BackgroundTransparency = 1.000
    	Title.Position = UDim2.new(0.481161445, 0, 0.425934881, 0)
    	Title.Size = UDim2.new(0, 196, 0, 26)
    	Title.Font = Enum.Font.SourceSans
    	if text ~= nil then
    		Title.Text = text
    	else
    		Title.Text = "nil"
    	end
    	Title.TextColor3 = Color3.fromRGB(111, 111, 111)
    	Title.TextSize = 24.000
    	Title.TextWrapped = true
    	Title.TextXAlignment = Enum.TextXAlignment.Left
		
		function Main:AddButton(text, callback)
			if callback == nil then
				error("callback == nil, please set a function to be executed onbuttonclick. e.g win:AddButton('text', function)")
			end
			if text == nil then
				error("please set a text to be displayed on the button")
			end
			
			local Button = Instance.new("TextButton")
			local TextButton_Roundify_10px = Instance.new("ImageLabel")
			local UIGradient = Instance.new("UIGradient")
			
			Button.Name = "Button"
			Button.Parent = game:GetService("CoreGui"):FindFirstChild(GuiTitle):FindFirstChild("MainFrame")
			Button.BackgroundColor3 = Color3.fromRGB(44,44,44)
			Button.BackgroundTransparency = 0
			Button.BorderColor3 = Color3.fromRGB(44, 44, 44)
			Button.BorderSizePixel = 0
			Button.Position = UDim2.new(0.46551615, 0, 0.599702835, 0)
			Button.Size = UDim2.new(0, 202, 0, 18)
			Button.ZIndex = 2
			Button.Font = Enum.Font.GothamSemibold
			Button.Text = text
			Button.TextColor3 = Color3.fromRGB(255, 255, 255)
			Button.TextSize = 18.000
			Button.TextWrapped = true
			if autoscale then
				game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size = UDim2.new(game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.X.Scale, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.X.Offset, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.Y.Scale, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.Y.Offset+30)
			end
			
			UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(22, 88, 129)), ColorSequenceKeypoint.new(0.36, Color3.fromRGB(81, 123, 174)), ColorSequenceKeypoint.new(0.75, Color3.fromRGB(77, 224, 170)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
			UIGradient.Parent = TextButton_Roundify_10px
			
			Button.MouseButton1Click:connect(callback)
		end
		function Main:AddInput(placeholder, callback)
			if placeholder == nil then
				warn('placeholder text not specified for input -- placeholdertext is recommended :>')
			end
			if callback == nil then
				error('Main:AddInput(text, placeholder, callback) -- argument 3 missing or nil :(')
			end
			-- Gui to Lua
			-- Version: 3.2
			
			-- Instances:
			
			local Input = Instance.new("TextBox")
			local UIGradient = Instance.new("UIGradient")
			
			--Properties:
			
			Input.Name = "Input"
			Input.Parent = game.StarterGui.DuckHub.MainFrame
			Input.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
			Input.BorderColor3 = Color3.fromRGB(53, 53, 53)
			Input.BorderSizePixel = 0
			Input.Position = UDim2.new(0.0395348854, 0, 0.207977206, 0)
			Input.Size = UDim2.new(0, 200, 0, 17)
			Input.ZIndex = 3
			Input.Font = Enum.Font.GothamSemibold
			Input.Text = ""
			Input.TextColor3 = Color3.fromRGB(98, 255, 211)
			Input.TextSize = 14.000
			Input.TextXAlignment = Enum.TextXAlignment.Left
			
			UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(231, 112, 210))}
			UIGradient.Parent = Input
			if autoscale then
				game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size = UDim2.new(game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.X.Scale, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.X.Offset, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.Y.Scale, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.Y.Offset+25)
			end			
			Input.ClearTextOnFocus = false
			if placeholder ~= nil then
				Input.PlaceholderText = placeholder
			end
			Input.TextColor3 = Color3.fromRGB(98, 255, 211)
			Input.TextSize = 14.000
			Input.TextXAlignment = Enum.TextXAlignment.Left
			
			UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(231, 112, 210))}
			UIGradient.Parent = Input
			local function focuslost(enterpressed, InputObject)
				callback(enterpressed, Input, InputObject)
			end
			Input.FocusLost:connect(focuslost)
		end
		
		function Main:AddToggle(text, callback)
			local Toggle = Instance.new("Frame")
			local Label = Instance.new("TextLabel")
			local Button = Instance.new("TextButton")
			local TextButton_Roundify_12px = Instance.new("ImageLabel")
			
			--Properties:
			
			Toggle.Name = "Toggle"
			Toggle.Parent = game:GetService("CoreGui")[GuiTitle].MainFrame
			Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Toggle.BackgroundTransparency = 1.000
			Toggle.Position = UDim2.new(0.0368663594, 0, 0.327425092, 0)
			Toggle.Size = UDim2.new(0, 201, 0, 25)
			
			Label.Name = "Label"
			Label.Text = text
			Label.Parent = Toggle
			Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Label.BackgroundTransparency = 1.000
			Label.Position = UDim2.new(0.0136695784, 0, 0.178855449, 0)
			Label.Size = UDim2.new(0, 194, 0, 23)
			Label.Font = Enum.Font.GothamSemibold
			Label.TextColor3 = Color3.fromRGB(111,111,111)
			Label.TextSize = 14.000
			Label.TextXAlignment = Enum.TextXAlignment.Left
			
			Button.Name = "Button"
			Button.Parent = Toggle
			Button.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
			Button.BackgroundTransparency = 1.000
			Button.BorderSizePixel = 0
			Button.Position = UDim2.new(0.68152678, 0, 0.211952657, 0)
			Button.Size = UDim2.new(0, 62, 0, 18)
			Button.ZIndex = 2
			Button.Font = Enum.Font.GothamSemibold
			Button.Text = "OFF"
			Button.TextColor3 = Color3.fromRGB(202, 26, 20)
			Button.TextSize = 14.000
			
			TextButton_Roundify_12px.Name = "TextButton_Roundify_12px"
			TextButton_Roundify_12px.Parent = Button
			TextButton_Roundify_12px.Active = true
			TextButton_Roundify_12px.AnchorPoint = Vector2.new(0.5, 0.5)
			TextButton_Roundify_12px.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextButton_Roundify_12px.BackgroundTransparency = 1.000
			TextButton_Roundify_12px.Position = UDim2.new(0.5, 0, 0.5, 0)
			TextButton_Roundify_12px.Selectable = true
			TextButton_Roundify_12px.Size = UDim2.new(1, 0, 1, 0)
			TextButton_Roundify_12px.Image = "rbxassetid://3570695787"
			TextButton_Roundify_12px.ImageColor3 = Color3.fromRGB(44, 44, 44)
			TextButton_Roundify_12px.ScaleType = Enum.ScaleType.Slice
			TextButton_Roundify_12px.SliceCenter = Rect.new(100, 100, 100, 100)
			TextButton_Roundify_12px.SliceScale = 0.120
			if autoscale then
				game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size = UDim2.new(game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.X.Scale, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.X.Offset, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.Y.Scale, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.Y.Offset+35)
			end
			local function toggle()
				if Button.Text == "OFF" then
					Button.TextColor3 = Color3.fromRGB(0,255,0)
					Button.Text = "ON"
				else
					Button.TextColor3 = Color3.fromRGB(255,0,0)
					Button.Text = "OFF"
				end
			end
			
			Button.MouseButton1Click:connect(function()
				toggle()
				if Button.Text == "OFF" then
					callback(false)
				else
					callback(true)
				end
			end)
		end
		
		function Main:Line(colour)
			local Seperate = Instance.new("Frame")

			--Properties:
			
			Seperate.Name = "Seperate"
			Seperate.Parent = game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame
			if colour ~= nil then
				Seperate.BackgroundColor3 = colour
			end
			Seperate.BackgroundColor3 = Color3.fromRGB(118, 118, 118)
			Seperate.BorderSizePixel = 0
			Seperate.Position = UDim2.new(0.0345622115, 0, 0.339401156, 0)
			Seperate.Size = UDim2.new(0, 202, 0, 1)
			if autoscale then
				game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size = UDim2.new(game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.X.Scale, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.X.Offset, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.Y.Scale, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.Y.Offset+20)
			end
		end
		
		function Main:Label(text, color)
			local Label = { }
			local TextLabel = Instance.new("TextLabel")
			TextLabel.Text = text
			TextLabel.Parent = game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame
			TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel.BackgroundTransparency = 1.000
			TextLabel.Position = UDim2.new(0.777205884, 0, 0.566339076, 0)
			TextLabel.Size = UDim2.new(0, 200, 0, 20)
			TextLabel.Font = Enum.Font.GothamSemibold
			if color ~= nil then
				TextLabel.TextColor3 = color
			else
				TextLabel.TextColor3 = Color3.fromRGB(111, 111, 111)
			end
			TextLabel.TextSize = 14.000
			TextLabel.TextXAlignment = Enum.TextXAlignment.Left
			if autoscale then
				game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size = UDim2.new(game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.X.Scale, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.X.Offset, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.Y.Scale, game:GetService("CoreGui"):FindFirstChild(GuiTitle).MainFrame.Size.Y.Offset+30)
			end		
			
			function Label:Update(NewText, NewColor)
				TextLabel.Text = NewText
				if NewColor ~= nil then
					TextLabel.TextColor3 = NewColor
				end
			end
			
			return Label
		end
		
		return Main
    end
    
    return DuckLibrary
end
